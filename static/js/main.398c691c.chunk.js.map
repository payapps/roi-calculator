{"version":3,"sources":["Components/Header/Header.tsx","Styles/dropdownStyles.js","Components/Calculator/Turnover/Turnover.jsx","Components/Calculator/ClaimsNumber/ClaimsNumber.jsx","Components/Calculator/AssessmentTime/AssessmentTime.jsx","Components/Calculator/HourlyRate/HourlyRate.jsx","Components/Calculator/PhysicalPayments/PhysicalPayments.jsx","Components/Calculator/Results/Results.jsx","Components/Calculator/Calculator.jsx","Components/App.jsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","data-testid","customStyles","option","provided","state","backgroundColor","cursor","height","menu","background","width","zIndex","display","flexDirection","position","control","alignItems","singleValue","opacity","isDisabled","transition","color","indicatorSeparator","Turnover","setTurnover","options","isUnitedKingdom","label","value","title","onChange","placeholder","aria-label","isSearchable","menuPlacement","styles","ClaimsNumber","setNumOfClaims","isTierSelected","restrictLetterInput","overlay","type","defaultValue","e","target","onKeyDown","AssessmentTime","setAssessmentTime","useState","hoursValue","setHoursValue","minutesValue","setMinutesValue","minutesInteger","Number","hoursInteger","useEffect","HourlyRate","setHourlyRate","PhysicalPayments","setNumOfPages","setArchivalCost","hasPhysicalPayments","setPhysicalPayments","Results","moneySavedAnnually","timeSaved","returnOnInvestment","formattedMoneySavedAnnually","toLocaleString","maximumFractionDigits","minimumFractionDigits","toFixed","Calculator","turnover","numOfClaims","assessmentTime","hourRate","numOfPages","archivalCost","checkZeroInputValues","payappsTotalAnnualCostToProcessClaims","totalPerClaimCost","physicalCosts","indexOf","keyCode","ctrlKey","shiftKey","preventDefault","App","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","setUnitedKingdom","toLocaleLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.398c691c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header className=\"roi-heading\" data-testid='roi-heading'>\n      <h1>R.O.I. CALCULATOR</h1>\n      <p>\n        See how much time and money you could be saving with Payapps.\n      </p>\n    </header>\n  );\n}\n\nexport default Header\n","const customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'none',\n    cursor: 'pointer',\n    height: '42px'\n  }),\n  menu: () => ({\n    background: '#13242E',\n    width: '200px',\n    zIndex: '2',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute'\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    display: 'flex',\n    alignItems: 'center',\n    height: '42px',\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1\n    const transition = 'opacity 300ms'\n\n    return {\n      ...provided, opacity, transition,\n      background: 'none',\n      display: 'flex',\n      color: '#ffffff',\n      height: '42px',\n      alignItems: 'center',\n      zIndex: '0'\n    }\n  },\n  indicatorSeparator: () => ({\n    display: 'none'\n  })\n}\n\nexport {\n  customStyles\n}","import React from 'react'\nimport Select from 'react-select'\nimport { customStyles } from '../../../Styles/dropdownStyles'\n\nconst Turnover = ({ setTurnover, isUnitedKingdom }) => {\n  const options = !isUnitedKingdom ? [\n    {\n      label: 'Tier 5 (< $10m)',\n      value: 21000\n    },\n    {\n      label: 'Tier 4 ($10-$50m)',\n      value: 24000\n    },\n    {\n      label: 'Tier 3 ($50-$250m)',\n      value: 36000\n    },\n    {\n      label: 'Tier 2 ($250m - $1.5b)',\n      value: 75000\n    },\n    {\n      label: 'Tier 1 ($1.5b +)',\n      value: 126000\n    },\n  ] : [\n    {\n      label: 'Tier 3 (£30-£249m)',\n      value: 12000\n    },\n    {\n      label: 'Tier 2 (£250m - £499m)',\n      value: 30000\n    },\n    {\n      label: 'Tier 1 (£500m +)',\n      value: 60000\n    },\n  ]\n\n  return (\n    <div className='roi-calculator__turnover' data-testid='roi-calculator__turnover'>\n      <div className='row'>\n        <div className='text' title='Select annual turnover'>\n          Select annual turnover\n        </div>\n\n        <div className='col1'>\n          <Select\n            options={options}\n            onChange={(value) => setTurnover(value)}\n            placeholder='Tier'\n            aria-label='turnover tier'\n            isSearchable={false}\n            menuPlacement='auto'\n            styles={customStyles}\n          />\n        </div>\n\n        <div className='col2'>\n          &nbsp;\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Turnover\n","import React from 'react'\n\nconst ClaimsNumber = ({ setNumOfClaims, isTierSelected, restrictLetterInput }) => {\n  const overlay = !isTierSelected ? <div className='overlay'></div> : null\n  \n  return (\n    <div className='row' data-testid='roi-claims-number'>\n      {overlay}\n      <div className='text' title='Claims processed per month?'>\n        Claims processed per month?\n          </div>\n      <div className='col1'>\n        <input type='text' defaultValue={200} placeholder='0' onChange={(e) => setNumOfClaims(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n      </div>\n      <div className='col2'>\n        &nbsp;\n          </div>\n    </div>\n  )\n}\n\nexport default ClaimsNumber\n","import React, { useState, useEffect } from 'react'\n\nconst AssessmentTime = ({ setAssessmentTime, isTierSelected, restrictLetterInput }) => {\n  const [hoursValue, setHoursValue] = useState('02')\n  const [minutesValue, setMinutesValue] = useState('00')\n  const minutesInteger = Number(minutesValue)\n  const hoursInteger = Number(hoursValue)\n  const overlay = !isTierSelected ? <div className='overlay'></div> : null\n\n  const calcAssessmentTime = () => {\n    setAssessmentTime(hoursInteger + (minutesInteger / 60))\n  }\n\n  useEffect(() => {\n    calcAssessmentTime()\n  })\n\n  return (\n    <div className='row' data-testid='roi-assessment-time'>\n      {overlay}\n      <div className='text' title='Total time to assess a claim?'>\n        Total time to assess a claim?\n      </div>\n      <div className='col1 roi-calculator__time-wrapper'>\n        <input className='roi-calculator__hours' type='text' defaultValue={hoursValue} placeholder='00' onChange={(e) => setHoursValue(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        <span className='colon'>:</span>\n        <input className='roi-calculator__minutes' type='text' defaultValue={minutesValue} placeholder='00' onChange={(e) => setMinutesValue(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        {/* <span className='si-unit'>hr</span> */}\n      </div>\n      <div className='col2'>\n        hrs : mins\n      </div>\n    </div>\n  )\n}\n\nexport default AssessmentTime\n","import React from 'react'\n\nconst HourlyRate = ({ setHourlyRate, isTierSelected, isUnitedKingdom, restrictLetterInput }) => {\n  const overlay = !isTierSelected ? <div className='overlay'></div> : null\n\n  return (\n    <div className='row' data-testid='roi-hourly-rate'>\n      {overlay}\n      <div className='text' title='Average Contract Administrator hourly wage (f you’re unsure, use 75)'>\n        Average Contract Administrator hourly wage <span className='small-text'>(if you’re unsure, use {isUnitedKingdom ? '£28' : '$75'} per hour)</span>\n      </div>\n      <div className='col1 roi-calculator__wage-input-wrapper'>\n        <span className='roi-calculator__wage-currency'>{isUnitedKingdom ? '£' : '$'}</span>\n        <input type='text' className='roi-calculator__wage' defaultValue={isUnitedKingdom ? 28 : 75} placeholder='0' onChange={(e) => setHourlyRate(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n      </div>\n      <div className='col2'>\n        per hour\n      </div>\n    </div>\n  )\n}\n\nexport default HourlyRate\n","import React, { useState } from 'react'\nimport Select from 'react-select'\nimport { customStyles } from '../../../Styles/dropdownStyles'\n\nconst PhysicalPayments = ({ setNumOfPages, setArchivalCost, isTierSelected, restrictLetterInput, hasPhysicalPayments, setPhysicalPayments }) => {\n  const options = [\n    {\n      label: 'no',\n      value: false\n    },\n    {\n      label: 'yes',\n      value: true\n    }\n  ]\n\n  const overlay = hasPhysicalPayments.value ? null : <div className='overlay'></div>\n\n  return (\n    <div className=\"roi-calculator__physical-payments\" data-testid='roi-physical-payments'>\n      <div className='row'>\n        {isTierSelected ? null : <div className='overlay'></div>}\n        <div className='text' title='Do you mail physical payment schedules?'>\n          Do you mail physical payment schedules?\n        </div>\n\n        <div className='col1'>\n          <Select\n            options={options}\n            onChange={(value) => setPhysicalPayments(value)}\n            defaultValue={options[0]}\n            aria-label='turnover tier'\n            isSearchable={false}\n            menuPlacement='auto'\n            styles={customStyles}\n          />\n        </div>\n\n        <div className='col2'>\n          &nbsp;\n        </div>\n      </div>\n\n      <div className='row'>\n        {overlay}\n\n        <div className='text' title='Average number of pages printed per claim'>\n          Average number of pages printed per claim\n        </div>\n        <div className='col1'>\n          <input type='text' placeholder='0' onChange={(e) => setNumOfPages(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        </div>\n        <div className='col2'>\n          &nbsp;\n          </div>\n      </div>\n\n      <div className='row'>\n        {overlay}\n        <div className='text' title='Courier and archival costs'>\n          Courier and archival costs\n        </div>\n        <div className='col1 roi-calculator__archival-input-wrapper'>\n          {/* <span className='roi-calculator__archival-currency'>$</span> */}\n          <input type='text' className='roi-calculator__archival-cost' placeholder='0' onChange={(e) => setArchivalCost(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        </div>\n        <div className='col2'>\n          per annum\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PhysicalPayments\n","import React from 'react'\n\nconst Results = ({ moneySavedAnnually, timeSaved, returnOnInvestment, isUnitedKingdom, isTierSelected }) => {\n  const overlay = !isTierSelected ? <div className='overlay'></div> : null\n\n  const formattedMoneySavedAnnually = moneySavedAnnually.toLocaleString(\"en-AU\", { maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <section className='roi-calculator__results' data-testid='roi-results'>\n      <div className='roi-calculator__results__return-on-investment'>\n        <p>You’ll see a return on your investment in</p>\n        <div className=\"roi-calculator__results__result-container\">\n          {overlay}\n          <p>\n            <span className='roi-calculator__results__number'>{returnOnInvestment.toFixed(1)}</span>\n            <span className='roi-calculator__results__units'> months</span>\n          </p>\n        </div>\n      </div>\n\n      <div className='roi-calculator__results__savings'>\n        <p>With Payapps, you could save</p>\n        <div className='roi-calculator__results__result-container'>\n          {overlay}\n          <p>\n            <span className='roi-calculator__results__number'>{isUnitedKingdom ? '£' : '$'}{formattedMoneySavedAnnually}</span>\n            <span className='roi-calculator__results__units'> pa</span>\n          </p>\n          <p>or</p>\n          <p>\n            <span className='roi-calculator__results__number'>{timeSaved.toFixed(0)}</span>\n            <span className='roi-calculator__results__units'> hrs/month</span>\n          </p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Results\n","import React, { useState } from 'react'\nimport Turnover from './Turnover/Turnover'\nimport ClaimsNumber from './ClaimsNumber/ClaimsNumber'\nimport AssessmentTime from './AssessmentTime/AssessmentTime'\nimport HourlyRate from './HourlyRate/HourlyRate'\nimport PhysicalPayments from './PhysicalPayments/PhysicalPayments'\nimport Results from './Results/Results'\n\nconst Calculator = ({ isUnitedKingdom }) => {\n  const [turnover, setTurnover] = useState({ label: 'none', value: 0 })\n  const [numOfClaims, setNumOfClaims] = useState(200)\n  const [assessmentTime, setAssessmentTime] = useState(2)\n  const [hourRate, setHourlyRate] = useState(isUnitedKingdom ? 28 : 75)\n  const [numOfPages, setNumOfPages] = useState(0)\n  const [hasPhysicalPayments, setPhysicalPayments] = useState(false)\n  const [archivalCost, setArchivalCost] = useState(0)\n  const isTierSelected = turnover.value !== 0\n\n  const checkZeroInputValues = numOfClaims < 1 || assessmentTime < 0.01 || hourRate < 0.01 || numOfClaims === '' || assessmentTime === '' || hourRate === ''\n\n  //Payapps Defaults\n  const payappsProcessingTime = 45 / 60 //45 minutes\n  const payappsDefaultRate = isUnitedKingdom ? 28 : 75 //dollars per hour\n  const payappsTotalPerClaimCost = payappsDefaultRate * payappsProcessingTime\n  const payappsTotalAnnualCostToProcessClaims = payappsTotalPerClaimCost * numOfClaims * 12\n\n  //Calculate Money Savings\n  const totalPerClaimCost = hourRate * assessmentTime\n  const physicalCosts = hasPhysicalPayments.value ? ((numOfPages * 0.05 * 12) + (archivalCost * 12)) : 0\n  const totalAnnualCostToProcessClaims = (totalPerClaimCost * numOfClaims * 12) + physicalCosts\n  const moneySavedAnnually = checkZeroInputValues ? 0 : totalAnnualCostToProcessClaims - payappsTotalAnnualCostToProcessClaims - turnover.value\n\n  //Calculate Time Savings\n  const timeSaved = checkZeroInputValues ? 0 : (numOfClaims * assessmentTime) - (numOfClaims * payappsProcessingTime)\n\n  //Calculate Return On Investment\n  const returnOnInvestment = checkZeroInputValues ? 0 : turnover.value / (moneySavedAnnually / 12)\n\n  //restrict letters and characters\n  const restrictLetterInput = (e) => {\n    if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n      // Allow: Ctrl+A\n      (e.keyCode === 65 && e.ctrlKey === true) ||\n      // Allow: home, end, left, right\n      (e.keyCode >= 35 && e.keyCode <= 39)) {\n      // let it happen, don't do anything\n      return\n    }\n    // Ensure that it is a number and stop the keypress\n    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n      e.preventDefault()\n    }\n  }\n\n  return (\n    <section className='roi-calculator' data-testid='roi-calculator'>\n      <Turnover setTurnover={setTurnover} isUnitedKingdom={isUnitedKingdom} />\n\n      <ClaimsNumber setNumOfClaims={setNumOfClaims} isTierSelected={isTierSelected} restrictLetterInput={restrictLetterInput} />\n\n      <AssessmentTime setAssessmentTime={setAssessmentTime} isTierSelected={isTierSelected} restrictLetterInput={restrictLetterInput} />\n\n      <HourlyRate setHourlyRate={setHourlyRate} isTierSelected={isTierSelected} isUnitedKingdom={isUnitedKingdom} restrictLetterInput={restrictLetterInput} />\n\n      {isUnitedKingdom ? null : <PhysicalPayments setNumOfPages={setNumOfPages} setArchivalCost={setArchivalCost} isTierSelected={isTierSelected} restrictLetterInput={restrictLetterInput} hasPhysicalPayments={hasPhysicalPayments} setPhysicalPayments={setPhysicalPayments} />}\n\n      <Results moneySavedAnnually={moneySavedAnnually} timeSaved={timeSaved} returnOnInvestment={returnOnInvestment} isUnitedKingdom={isUnitedKingdom} isTierSelected={isTierSelected} />\n\n    </section>\n  )\n}\n\nexport default Calculator\n","import React, { useState, useEffect } from 'react'\nimport Header from './Header/Header'\nimport Calculator from './Calculator/Calculator'\n\nconst App = () => {\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n  const [isUnitedKingdom, setUnitedKingdom] = useState(false)\n\n  const getTimeZone = () => {\n    timezone.toLocaleLowerCase() === 'europe/london' && setUnitedKingdom(true)\n  }\n\n  useEffect(() => {\n    getTimeZone()\n  })\n\n  return (\n    <div className=\"roi-container\" data-testid='roi-container'>\n      <Header />\n      <Calculator isUnitedKingdom={isUnitedKingdom} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)  \n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'typeface-roboto'\nimport './Styles/index.scss'\nimport App from './Components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}