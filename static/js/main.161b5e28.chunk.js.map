{"version":3,"sources":["Components/Header/Header.tsx","Components/Calculator/ClaimsNumber/ClaimsNumber.jsx","Components/Calculator/AssessmentTime/AssessmentTime.jsx","Components/Calculator/HourlyRate/HourlyRate.jsx","Styles/dropdownStyles.js","Components/Calculator/PhysicalPayments/PhysicalPayments.jsx","Components/Calculator/Results/Results.jsx","Components/Calculator/Calculator.jsx","Components/App.jsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","data-testid","ClaimsNumber","setNumOfClaims","restrictLetterInput","text","title","type","defaultValue","placeholder","onChange","e","target","value","onKeyDown","maxLength","AssessmentTime","setAssessmentTime","useState","hoursValue","setHoursValue","minutesValue","setMinutesValue","minutesInteger","Number","hoursInteger","useEffect","HourlyRate","setHourlyRate","isUnitedKingdom","customStyles","option","provided","state","backgroundColor","cursor","height","menu","background","width","zIndex","display","flexDirection","position","control","alignItems","singleValue","opacity","isDisabled","transition","color","indicatorSeparator","PhysicalPayments","setNumOfPages","setArchivalCost","hasPhysicalPayments","setPhysicalPayments","options","label","overlay","aria-label","isSearchable","menuPlacement","styles","Results","moneySavedAnnually","timeSaved","formattedMoneySavedAnnually","toLocaleString","maximumFractionDigits","minimumFractionDigits","toFixed","Calculator","numOfClaims","assessmentTime","hourRate","numOfPages","archivalCost","checkZeroInputValues","payappsProcessingTime","payappsTotalAnnualCostToProcessClaims","totalPerClaimCost","physicalCosts","indexOf","keyCode","ctrlKey","shiftKey","preventDefault","texts","claimsNumber","hourlyRate","App","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","setUnitedKingdom","toLocaleLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAaeA,EAXA,WACb,OACE,yBAAQC,UAAU,cAAcC,cAAY,cAA5C,UACE,oDACA,kGCaSC,EAjBM,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,KAE3D,OACE,sBAAKL,UAAU,MAAMC,cAAY,oBAAjC,UACE,qBAAKD,UAAU,OAAOM,MAAOD,EAA7B,SACGA,IAEH,qBAAKL,UAAU,OAAf,SACE,uBAAOO,KAAK,OAAOC,aAAc,IAAKC,YAAY,IAAIC,SAAU,SAACC,GAAD,OAAOR,EAAeQ,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,IAAII,UAAU,QAE7J,qBAAKf,UAAU,OAAf,sBCsBSgB,EAhCQ,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,kBAAmBb,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,KAAW,EACvCa,mBAAS,MAD8B,mBACpEC,EADoE,KACxDC,EADwD,OAEnCF,mBAAS,MAF0B,mBAEpEG,EAFoE,KAEtDC,EAFsD,KAGrEC,EAAiBC,OAAOH,GACxBI,EAAeD,OAAOL,GAU5B,OAJAO,qBAAU,WAHRT,EAAkBQ,EAAgBF,EAAiB,OAQnD,sBAAKvB,UAAU,MAAMC,cAAY,sBAAjC,UACE,qBAAKD,UAAU,OAAOM,MAAOD,EAA7B,SACGA,IAEH,sBAAKL,UAAU,oCAAf,UACE,uBAAOA,UAAU,wBAAwBO,KAAK,OAAOC,aAAcW,EAAYV,YAAY,KAAKC,SAAU,SAACC,GAAD,OAAOS,EAAcT,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,IAAII,UAAU,MACpM,sBAAMf,UAAU,QAAhB,eACA,uBAAOA,UAAU,0BAA0BO,KAAK,OAAOC,aAAca,EAAcZ,YAAY,KAAKC,SAAU,SAACC,GAAD,OAAOW,EAAgBX,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,IAAII,UAAU,SAG5M,qBAAKf,UAAU,OAAf,4BCPS2B,EAlBI,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,cAAeC,EAAiD,EAAjDA,gBAAiBzB,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,KAEzE,OACE,sBAAKL,UAAU,MAAMC,cAAY,kBAAjC,UACE,qBAAKD,UAAU,OAAOM,MAAOD,EAA7B,SACGA,IAEH,sBAAKL,UAAU,0CAAf,UACE,sBAAMA,UAAU,gCAAhB,SAAiD6B,EAAkB,OAAM,MACzE,uBAAOtB,KAAK,OAAOP,UAAU,uBAAuBQ,aAAcqB,EAAkB,GAAK,GAAIpB,YAAY,IAAIC,SAAU,SAACC,GAAD,OAAOiB,EAAcjB,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,SAErM,qBAAKX,UAAU,OAAf,0B,eCbA8B,EAAe,CACnBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,gBAAiB,OACjBC,OAAQ,UACRC,OAAQ,UAEVC,KAAM,iBAAO,CACXC,WAAY,UACZC,MAAO,QACPC,OAAQ,IACRC,QAAS,OACTC,cAAe,SACfC,SAAU,aAEZC,QAAS,iBAAO,CAEdH,QAAS,OACTI,WAAY,SACZT,OAAQ,SAEVU,YAAa,SAACd,EAAUC,GACtB,IAAMc,EAAUd,EAAMe,WAAa,GAAM,EAGzC,OAAO,2BACFhB,GADL,IACee,UAASE,WAHL,gBAIjBX,WAAY,OACZG,QAAS,OACTS,MAAO,UACPd,OAAQ,OACRS,WAAY,SACZL,OAAQ,OAGZW,mBAAoB,iBAAO,CACzBV,QAAS,UCqCEW,EArEU,SAAC,GAAuG,IAArGC,EAAoG,EAApGA,cAAeC,EAAqF,EAArFA,gBAAiBlD,EAAoE,EAApEA,oBAAqBmD,EAA+C,EAA/CA,oBAAqBC,EAA0B,EAA1BA,oBAC9FC,EAAU,CACd,CACEC,MAAO,KACP7C,OAAO,GAET,CACE6C,MAAO,MACP7C,OAAO,IAIL8C,EAAUJ,EAAoB1C,MAAQ,KAAO,qBAAKb,UAAU,YAElE,OACE,sBAAKA,UAAU,oCAAoCC,cAAY,wBAA/D,UACE,sBAAKD,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAOM,MAAM,0CAA5B,qDAIA,qBAAKN,UAAU,OAAf,SACE,cAAC,IAAD,CACEyD,QAASA,EACT/C,SAAU,SAACG,GAAD,OAAW2C,EAAoB3C,IACzCL,aAAciD,EAAQ,GACtBG,aAAW,gBACXC,cAAc,EACdC,cAAc,OACdC,OAAQjC,MAIZ,qBAAK9B,UAAU,OAAf,qBAKF,sBAAKA,UAAU,MAAf,UACG2D,EAED,qBAAK3D,UAAU,OAAOM,MAAM,4CAA5B,uDAGA,qBAAKN,UAAU,OAAf,SACE,uBAAOO,KAAK,OAAOE,YAAY,IAAIC,SAAU,SAACC,GAAD,OAAO0C,EAAc1C,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,QAE3H,qBAAKX,UAAU,OAAf,qBAKF,sBAAKA,UAAU,MAAf,UACG2D,EACD,qBAAK3D,UAAU,OAAOM,MAAM,6BAA5B,wCAGA,qBAAKN,UAAU,8CAAf,SAEE,uBAAOO,KAAK,OAAOP,UAAU,gCAAgCS,YAAY,IAAIC,SAAU,SAACC,GAAD,OAAO2C,EAAgB3C,EAAEC,OAAOC,QAAQC,UAAW,SAACH,GAAD,OAAOP,EAAoBO,QAEvK,qBAAKX,UAAU,OAAf,8BCrCOgE,EA1BC,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,mBAAoBC,EAAiC,EAAjCA,UAAWrC,EAAsB,EAAtBA,gBAC1C8B,EAAkC,IAAvBM,GAA4BC,EAAY,EAAK,qBAAKlE,UAAU,YAAmB,KAE1FmE,EAA8BF,EAAmBG,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,IAElI,OACE,yBAAStE,UAAU,0BAA0BC,cAAY,cAAzD,SACE,sBAAKD,UAAU,mCAAf,UACE,6DACA,sBAAKA,UAAU,4CAAf,UACG2D,EACD,8BACE,uBAAM3D,UAAU,kCAAhB,UAAmD6B,EAAkB,OAAM,IAAKsC,KAChF,sBAAMnE,UAAU,iCAAhB,oBAEF,mCACA,8BACE,sBAAMA,UAAU,kCAAhB,SAAmDkE,EAAUK,QAAQ,KACrE,sBAAMvE,UAAU,iCAAhB,oCCyDGwE,EAtEI,SAAC,GAAyB,IAAvB3C,EAAsB,EAAtBA,gBAAsB,EACJX,mBAAS,KADL,mBACnCuD,EADmC,KACtBtE,EADsB,OAEEe,mBAAS,GAFX,mBAEnCwD,EAFmC,KAEnBzD,EAFmB,OAGRC,mBAASW,EAAkB,GAAK,IAHxB,mBAGnC8C,EAHmC,KAGzB/C,EAHyB,OAINV,mBAAS,GAJH,mBAInC0D,EAJmC,KAIvBvB,EAJuB,OAKSnC,oBAAS,GALlB,mBAKnCqC,EALmC,KAKdC,EALc,OAMFtC,mBAAS,GANP,mBAMnC2D,EANmC,KAMrBvB,EANqB,KAQpCwB,EAAuBL,EAAc,GAAKC,EAAiB,KAAQC,EAAW,KAAwB,KAAhBF,GAAyC,KAAnBC,GAAsC,KAAbC,EAIrII,EAAwBL,EAAiB,IAAMA,EAAiB,EADpC,IAI5BM,GAFqBnD,EAAkB,GAAK,IACIkD,EACmBN,EAAc,GAGjFQ,EAAoBN,EAAWD,EAC/BQ,EAAgB3B,EAAoB1C,MAAuB,IAAb+D,EAAoB,GAAsB,GAAfC,EAAsB,EAE/FZ,EAAqBa,EAAuB,EADVG,EAAoBR,EAAc,GAAMS,EACOF,EAGjFd,EAAYY,EAAuB,EAAKL,EAAcC,EAAmBD,EAAcM,EAGvF3E,EAAsB,SAACO,IACyB,IAAhD,CAAC,GAAI,EAAG,EAAG,GAAI,GAAI,KAAKwE,QAAQxE,EAAEyE,UAErB,KAAdzE,EAAEyE,UAAgC,IAAdzE,EAAE0E,SAEtB1E,EAAEyE,SAAW,IAAMzE,EAAEyE,SAAW,KAK9BzE,EAAE2E,UAAa3E,EAAEyE,QAAU,IAAMzE,EAAEyE,QAAU,MAASzE,EAAEyE,QAAU,IAAMzE,EAAEyE,QAAU,MACvFzE,EAAE4E,kBAIAC,EAAQ3D,EAAkB,CAC9B4D,aAAc,oCACdf,eAAgB,uCAChBgB,WAAY,2CACV,CACFD,aAAc,8BACdf,eAAgB,gCAChBgB,WAAY,6EAGd,OACE,0BAAS1F,UAAU,iBAAiBC,cAAY,iBAAhD,UAGE,cAAC,EAAD,CAAcE,eAAgBA,EAAgBC,oBAAqBA,EAAqBC,KAAMmF,EAAMC,eAEpG,cAAC,EAAD,CAAgBxE,kBAAmBA,EAAmBb,oBAAqBA,EAAqBC,KAAMmF,EAAMd,iBAE5G,cAAC,EAAD,CAAY9C,cAAeA,EAAeC,gBAAiBA,EAAiBzB,oBAAqBA,EAAqBC,KAAMmF,EAAME,aAEjI7D,EAAkB,KAAO,cAAC,EAAD,CAAkBwB,cAAeA,EAAeC,gBAAiBA,EAAiBlD,oBAAqBA,EAAqBmD,oBAAqBA,EAAqBC,oBAAqBA,IAErN,cAAC,EAAD,CAASS,mBAAoBA,EAAoBC,UAAWA,EAAWrC,gBAAiBA,QC/C/E8D,EApBH,WACV,IAAMC,EAAWC,KAAKC,iBAAiBC,kBAAkBC,SADzC,EAE4B9E,oBAAS,GAFrC,mBAETW,EAFS,KAEQoE,EAFR,KAYhB,OAJAvE,qBAAU,WAHyB,kBAAjCkE,EAASM,qBAA2CD,GAAiB,MAQrE,sBAAKjG,UAAU,gBAAgBC,cAAY,gBAA3C,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAY4B,gBAAiBA,QCLpBsE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.161b5e28.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header className=\"roi-heading\" data-testid='roi-heading'>\n      <h1>SAVINGS CALCULATOR</h1>\n      <p>\n        See how much time and money you could be saving with Payapps.\n      </p>\n    </header>\n  );\n}\n\nexport default Header\n","import React from 'react'\n\nconst ClaimsNumber = ({ setNumOfClaims, restrictLetterInput, text }) => {\n\n  return (\n    <div className='row' data-testid='roi-claims-number'>\n      <div className='text' title={text}>\n        {text}\n          </div>\n      <div className='col1'>\n        <input type='text' defaultValue={200} placeholder='0' onChange={(e) => setNumOfClaims(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} maxLength='9' />\n      </div>\n      <div className='col2'>\n        &nbsp;\n          </div>\n    </div>\n  )\n}\n\nexport default ClaimsNumber\n","import React, { useState, useEffect } from 'react'\n\nconst AssessmentTime = ({ setAssessmentTime, restrictLetterInput, text }) => {\n  const [hoursValue, setHoursValue] = useState('02')\n  const [minutesValue, setMinutesValue] = useState('00')\n  const minutesInteger = Number(minutesValue)\n  const hoursInteger = Number(hoursValue)\n\n  const calcAssessmentTime = () => {\n    setAssessmentTime(hoursInteger + (minutesInteger / 60))\n  }\n\n  useEffect(() => {\n    calcAssessmentTime()\n  })\n\n  return (\n    <div className='row' data-testid='roi-assessment-time'>\n      <div className='text' title={text}>\n        {text}\n      </div>\n      <div className='col1 roi-calculator__time-wrapper'>\n        <input className='roi-calculator__hours' type='text' defaultValue={hoursValue} placeholder='00' onChange={(e) => setHoursValue(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} maxLength='2' />\n        <span className='colon'>:</span>\n        <input className='roi-calculator__minutes' type='text' defaultValue={minutesValue} placeholder='00' onChange={(e) => setMinutesValue(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} maxLength='2' />\n        {/* <span className='si-unit'>hr</span> */}\n      </div>\n      <div className='col2'>\n        hrs : mins\n      </div>\n    </div>\n  )\n}\n\nexport default AssessmentTime\n","import React from 'react'\n\nconst HourlyRate = ({ setHourlyRate, isUnitedKingdom, restrictLetterInput, text }) => {\n\n  return (\n    <div className='row' data-testid='roi-hourly-rate'>\n      <div className='text' title={text}>\n        {text}\n      </div>\n      <div className='col1 roi-calculator__wage-input-wrapper'>\n        <span className='roi-calculator__wage-currency'>{isUnitedKingdom ? '£' : '$'}</span>\n        <input type='text' className='roi-calculator__wage' defaultValue={isUnitedKingdom ? 28 : 75} placeholder='0' onChange={(e) => setHourlyRate(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n      </div>\n      <div className='col2'>\n        per hour\n      </div>\n    </div>\n  )\n}\n\nexport default HourlyRate\n","const customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'none',\n    cursor: 'pointer',\n    height: '42px'\n  }),\n  menu: () => ({\n    background: '#13242E',\n    width: '200px',\n    zIndex: '2',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute'\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    display: 'flex',\n    alignItems: 'center',\n    height: '42px',\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1\n    const transition = 'opacity 300ms'\n\n    return {\n      ...provided, opacity, transition,\n      background: 'none',\n      display: 'flex',\n      color: '#ffffff',\n      height: '42px',\n      alignItems: 'center',\n      zIndex: '0'\n    }\n  },\n  indicatorSeparator: () => ({\n    display: 'none'\n  })\n}\n\nexport {\n  customStyles\n}","import React from 'react'\nimport Select from 'react-select'\nimport { customStyles } from '../../../Styles/dropdownStyles'\n\nconst PhysicalPayments = ({ setNumOfPages, setArchivalCost, restrictLetterInput, hasPhysicalPayments, setPhysicalPayments }) => {\n  const options = [\n    {\n      label: 'no',\n      value: false\n    },\n    {\n      label: 'yes',\n      value: true\n    }\n  ]\n\n  const overlay = hasPhysicalPayments.value ? null : <div className='overlay'></div>\n\n  return (\n    <div className=\"roi-calculator__physical-payments\" data-testid='roi-physical-payments'>\n      <div className='row'>\n        <div className='text' title='Do you mail physical payment schedules?'>\n          Do you mail physical payment schedules?\n        </div>\n\n        <div className='col1'>\n          <Select\n            options={options}\n            onChange={(value) => setPhysicalPayments(value)}\n            defaultValue={options[0]}\n            aria-label='turnover tier'\n            isSearchable={false}\n            menuPlacement='auto'\n            styles={customStyles}\n          />\n        </div>\n\n        <div className='col2'>\n          &nbsp;\n        </div>\n      </div>\n\n      <div className='row'>\n        {overlay}\n\n        <div className='text' title='Average number of pages printed per claim'>\n          Average number of pages printed per claim\n        </div>\n        <div className='col1'>\n          <input type='text' placeholder='0' onChange={(e) => setNumOfPages(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        </div>\n        <div className='col2'>\n          &nbsp;\n          </div>\n      </div>\n\n      <div className='row'>\n        {overlay}\n        <div className='text' title='Courier and archival costs'>\n          Courier and archival costs\n        </div>\n        <div className='col1 roi-calculator__archival-input-wrapper'>\n          {/* <span className='roi-calculator__archival-currency'>$</span> */}\n          <input type='text' className='roi-calculator__archival-cost' placeholder='0' onChange={(e) => setArchivalCost(e.target.value)} onKeyDown={(e) => restrictLetterInput(e)} />\n        </div>\n        <div className='col2'>\n          per annum\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PhysicalPayments\n","import React from 'react'\n\nconst Results = ({ moneySavedAnnually, timeSaved, isUnitedKingdom }) => {\n  const overlay = (moneySavedAnnually === 0 && timeSaved < 1) ? <div className='overlay'></div> : null\n\n  const formattedMoneySavedAnnually = moneySavedAnnually.toLocaleString(\"en-AU\", { maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <section className='roi-calculator__results' data-testid='roi-results'>\n      <div className='roi-calculator__results__savings'>\n        <p>With Payapps, you could save</p>\n        <div className='roi-calculator__results__result-container'>\n          {overlay}\n          <p>\n            <span className='roi-calculator__results__number'>{isUnitedKingdom ? '£' : '$'}{formattedMoneySavedAnnually}</span>\n            <span className='roi-calculator__results__units'> pa</span>\n          </p>\n          <p>or</p>\n          <p>\n            <span className='roi-calculator__results__number'>{timeSaved.toFixed(0)}</span>\n            <span className='roi-calculator__results__units'> hrs/month</span>\n          </p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Results\n","import React, { useState } from 'react'\nimport ClaimsNumber from './ClaimsNumber/ClaimsNumber'\nimport AssessmentTime from './AssessmentTime/AssessmentTime'\nimport HourlyRate from './HourlyRate/HourlyRate'\nimport PhysicalPayments from './PhysicalPayments/PhysicalPayments'\nimport Results from './Results/Results'\n\nconst Calculator = ({ isUnitedKingdom }) => {\n  const [numOfClaims, setNumOfClaims] = useState(200)\n  const [assessmentTime, setAssessmentTime] = useState(2)\n  const [hourRate, setHourlyRate] = useState(isUnitedKingdom ? 28 : 75)\n  const [numOfPages, setNumOfPages] = useState(0)\n  const [hasPhysicalPayments, setPhysicalPayments] = useState(false)\n  const [archivalCost, setArchivalCost] = useState(0)\n\n  const checkZeroInputValues = numOfClaims < 1 || assessmentTime < 0.01 || hourRate < 0.01 || numOfClaims === '' || assessmentTime === '' || hourRate === ''\n\n  //Payapps Defaults\n  const defaultPayappsProcessTime = 45 / 60 //45 mins\n  const payappsProcessingTime = assessmentTime < 1.5 ? assessmentTime / 2 : defaultPayappsProcessTime //if input value is less than 1.5 hrs then use half the assessment time entered by user\n  const payappsDefaultRate = isUnitedKingdom ? 28 : 75 //pounds or dollars per hour\n  const payappsTotalPerClaimCost = payappsDefaultRate * payappsProcessingTime\n  const payappsTotalAnnualCostToProcessClaims = payappsTotalPerClaimCost * numOfClaims * 12\n\n  //Calculate Money Savings\n  const totalPerClaimCost = hourRate * assessmentTime\n  const physicalCosts = hasPhysicalPayments.value ? ((numOfPages * 0.05 * 12) + (archivalCost * 12)) : 0\n  const totalAnnualCostToProcessClaims = (totalPerClaimCost * numOfClaims * 12) + physicalCosts\n  const moneySavedAnnually = checkZeroInputValues ? 0 : totalAnnualCostToProcessClaims - payappsTotalAnnualCostToProcessClaims\n\n  //Calculate Time Savings\n  const timeSaved = checkZeroInputValues ? 0 : (numOfClaims * assessmentTime) - (numOfClaims * payappsProcessingTime)\n\n  //restrict letters and characters\n  const restrictLetterInput = (e) => {\n    if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n      // Allow: Ctrl+A\n      (e.keyCode === 65 && e.ctrlKey === true) ||\n      // Allow: home, end, left, right\n      (e.keyCode >= 35 && e.keyCode <= 39)) {\n      // let it happen, don't do anything\n      return\n    }\n    // Ensure that it is a number and stop the keypress\n    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n      e.preventDefault()\n    }\n  }\n\n  const texts = isUnitedKingdom ? {\n    claimsNumber: 'Applications processed per month?',\n    assessmentTime: 'Total time to assess an application?',\n    hourlyRate: 'Average Quantity Surveyors hourly wage?'\n  } : {\n    claimsNumber: 'Claims processed per month?',\n    assessmentTime: 'Total time to assess a claim?',\n    hourlyRate: 'Average Contract Administrator hourly wage (f you’re unsure, use 75)'\n  };\n\n  return (\n    <section className='roi-calculator' data-testid='roi-calculator'>\n      {/* <Turnover setTurnover={setTurnover} isUnitedKingdom={isUnitedKingdom} /> */}\n\n      <ClaimsNumber setNumOfClaims={setNumOfClaims} restrictLetterInput={restrictLetterInput} text={texts.claimsNumber} />\n\n      <AssessmentTime setAssessmentTime={setAssessmentTime} restrictLetterInput={restrictLetterInput} text={texts.assessmentTime} />\n\n      <HourlyRate setHourlyRate={setHourlyRate} isUnitedKingdom={isUnitedKingdom} restrictLetterInput={restrictLetterInput} text={texts.hourlyRate} />\n\n      {isUnitedKingdom ? null : <PhysicalPayments setNumOfPages={setNumOfPages} setArchivalCost={setArchivalCost} restrictLetterInput={restrictLetterInput} hasPhysicalPayments={hasPhysicalPayments} setPhysicalPayments={setPhysicalPayments} />}\n\n      <Results moneySavedAnnually={moneySavedAnnually} timeSaved={timeSaved} isUnitedKingdom={isUnitedKingdom} />\n\n    </section>\n  )\n}\n\nexport default Calculator\n","import React, { useState, useEffect } from 'react'\nimport Header from './Header/Header'\nimport Calculator from './Calculator/Calculator'\n\nconst App = () => {\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n  const [isUnitedKingdom, setUnitedKingdom] = useState(false)\n\n  const getTimeZone = () => {\n    timezone.toLocaleLowerCase() === 'europe/london' && setUnitedKingdom(true)\n  }\n\n  useEffect(() => {\n    getTimeZone()\n  })\n\n  return (\n    <div className=\"roi-container\" data-testid='roi-container'>\n      <Header />\n      <Calculator isUnitedKingdom={isUnitedKingdom} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)  \n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'typeface-roboto'\nimport './Styles/index.scss'\nimport App from './Components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}